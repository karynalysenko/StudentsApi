// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsApi1.Data;

#nullable disable

namespace StudentsApi1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230221185515_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentsApi1.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "LEIM"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "LESI"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "LEBIS"
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "LEMP"
                        });
                });

            modelBuilder.Entity("StudentsApi1.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentsApi1.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"));

                    b.Property<string>("UniversityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniversityId");

                    b.ToTable("University");

                    b.HasData(
                        new
                        {
                            UniversityId = 1,
                            UniversityName = "IPCA"
                        },
                        new
                        {
                            UniversityId = 2,
                            UniversityName = "UMinho"
                        },
                        new
                        {
                            UniversityId = 3,
                            UniversityName = "IPVC"
                        },
                        new
                        {
                            UniversityId = 4,
                            UniversityName = "Politecnico de Aveiro"
                        },
                        new
                        {
                            UniversityId = 5,
                            UniversityName = "ISEP"
                        });
                });

            modelBuilder.Entity("StudentsApi1.Models.Student", b =>
                {
                    b.HasOne("StudentsApi1.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("University");
                });
#pragma warning restore 612, 618
        }
    }
}
